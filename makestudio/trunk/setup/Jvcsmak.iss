; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
#define VERSION  'v3.70'
#define BUILDNO  'R5'
OutputBaseFilename=.\JVCSMake{#VERSION}Setup.{#BUILDNO}
AppName=Jedi Make
AppVerName=Jedi Make {#VERSION}
DefaultDirName={pf}\Jedi\Jedi Make
DefaultGroupName=Jedi\Jedi Make
LicenseFile=License.rtf
Compression=lzma
SolidCompression=true
AllowRootDirectory=false
AlwaysShowDirOnReadyPage=true
ChangesAssociations=true
EnableDirDoesntExistWarning=true
AppSupportURL=http://jedivcs.sourceforge.net/
AppUpdatesURL=http://sourceforge.net/projects/jedivcs
AppCopyright=Released under MPL 1.1
ShowLanguageDialog=yes

[Registry]
Root: HKCR; Subkey: .jmk; ValueType: string; ValueName: ; ValueData: jvcsmak; Flags: uninsdeletevalue
Root: HKCR; Subkey: jvcsmak; ValueType: string; ValueName: ; ValueData: Jedi Make Configuration; Flags: uninsdeletekey
Root: HKCR; Subkey: jvcsmak\DefaultIcon; ValueType: string; ValueName: ; ValueData: {app}\JVCSMAK.EXE,0
Root: HKCR; Subkey: jvcsmak\shell\open\command; ValueType: string; ValueName: ; ValueData: """{app}\JVCSMAK.EXE"" ""%1"""

[Types]
Name: FULL; Description: Full installation
Name: CUSTOM; Description: Custom installation; Flags: IsCustom

[CustomMessages]
; -----------
; en Language
RegisterIdeClientForUseIn_Product=Register IDE wizard for use in %1
RegisterFor_Product_Version_IDE=Register for %1 IDE

[Components]
Name: GUI; Description: Framework; Types: FULL CUSTOM
Name: PLGDELPHI32; Description: Delphi 32 Plugin; Types: FULL CUSTOM
Name: PLGJVCS; Description: JVCS Plugin; Types: FULL CUSTOM
Name: PLGUTILS; Description: Utilities Plugin; Types: FULL CUSTOM
Name: PLGWISE; Description: Wise Installer Plugin; Types: FULL CUSTOM
Name: PLGPASSOLO; Description: Passolo Localization Plugin; Types: FULL CUSTOM
Name: PLGEASYBACKUP; Description: Easy Backup Plugin; Types: FULL CUSTOM
Name: PLGTEMPLATE; Description: Plugin Wizard and Samples; Types: FULL CUSTOM
Name: PLGDIALOGS; Description: Dialogs Plugin; Types: FULL CUSTOM
Name: PLGHELPMAN; Description: Help and Manual Plugin; Types: FULL CUSTOM
Name: PLGRESOURCE; Description: Version Resource Plugin; Types: FULL CUSTOM
Name: PLGINNOSETUP; Description: Inno Setup Plugin; Types: FULL CUSTOM
Name: PLGZIP; Description: Zip Plugin; Types: FULL CUSTOM
Name: PLGNSIS; Description: NSIS Setup Plugin; Types: FULL CUSTOM
Name: PLGPSCRIPT; Description: Pascal Script Plugin; Types: FULL CUSTOM
Name: PLGWIZARD; Description: Code Wizard for own Plugins; Types: FULL CUSTOM

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked
Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked

[Files]
Source: ..\bin\Jvcsmak.exe; DestDir: {app}; Components: GUI; Flags: ignoreversion overwritereadonly
Source: ..\bin\Jvcsmak.dll; DestDir: {app}; Components: GUI; Flags: ignoreversion overwritereadonly
;Source: ..\bin\Jmak.exe; DestDir: {app}; Components: GUI; Flags: ignoreversion overwritereadonly
Source: ..\bin\Jvcsmak.kwd; DestDir: {app}; Components: GUI; Flags: ignoreversion overwritereadonly
Source: ..\bin\jvcs_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGJVCS; Flags: ignoreversion overwritereadonly
Source: ..\bin\delphi32_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGDELPHI32; Flags: ignoreversion overwritereadonly
Source: ..\bin\EasyBackup_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGEASYBACKUP; Flags: ignoreversion overwritereadonly
Source: ..\bin\utils_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGUTILS; Flags: ignoreversion overwritereadonly
Source: ..\bin\passolo_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGPASSOLO; Flags: ignoreversion overwritereadonly
Source: ..\bin\wise_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGWISE; Flags: ignoreversion overwritereadonly
Source: ..\bin\dialogs_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGDIALOGS; Flags: ignoreversion overwritereadonly
Source: ..\bin\helpandmanual_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGHELPMAN; Flags: ignoreversion overwritereadonly
Source: ..\bin\resources_JVCSMakPlugin.jpl; DestDir: {app}; Components: PLGRESOURCE; Flags: ignoreversion overwritereadonly
Source: ..\bin\innosetup_JMakPlugin.jpl; DestDir: {app}; Components: PLGINNOSETUP; Flags: ignoreversion overwritereadonly
Source: ..\bin\zip_JMakPlugin.jpl; DestDir: {app}; Components: PLGZIP; Flags: ignoreversion overwritereadonly
Source: ..\plugins\pluginzip\Dll\DelZip179.dll; DestDir: {app}; Components: PLGZIP; Flags: ignoreversion overwritereadonly
Source: ..\bin\nsis_JMakPlugin.jpl; DestDir: {app}; Components: PLGNSIS; Flags: ignoreversion overwritereadonly
Source: ..\bin\pscript_JMakPlugin.jpl; DestDir: {app}; Components: PLGPSCRIPT; Flags: ignoreversion overwritereadonly
Source: ..\bin\codewizard.jpl; DestDir: {app}; Components: PLGWIZARD; Flags: ignoreversion overwritereadonly
Source: ..\Doc\How to Create a JVCSMAK Plugin.rtf; DestDir: {app}; Components: PLGTEMPLATE; Flags: ignoreversion overwritereadonly
Source: ..\Jvcsmak_TLB.pas; DestDir: {app}\Source\Lib; Components: PLGTEMPLATE; Flags: ignoreversion overwritereadonly
Source: ..\bin\CodeTemplate\*.*; DestDir: {app}\CodeTemplate; Components: PLGPSCRIPT; Flags: ignoreversion overwritereadonly
;Basic Help Files
Source: ..\doc\help\jvcsmak\startup\jvcsmak.hhp; DestDir: {app}\help; Components: GUI; Flags: ignoreversion overwritereadonly
Source: ..\doc\help\jvcsmak\startup\jvcsmak.hhc; DestDir: {app}\help; Components: GUI; Flags: ignoreversion overwritereadonly
Source: ..\doc\help\jvcsmak\startup\jvcsmak.hhk; DestDir: {app}\help; Components: GUI; Flags: ignoreversion overwritereadonly
Source: ..\doc\help\jvcsmak\startup\jvcsmak.htm; DestDir: {app}\help; Components: GUI; Flags: ignoreversion overwritereadonly
Source: ..\doc\help\jvcsmak\startup\mainform.jpg; DestDir: {app}\help; Components: GUI; Flags: ignoreversion overwritereadonly
;Source: ..\doc\history\History.chm; DestDir: {commonprograms}\MakeStudio\Help; Components: GUI; AfterInstall: CreateMergedHelpFileChapter( ExpandConstant('{app}\Help\History.chm'), 'Jedi Make History', 'History.hhk'); Flags: ignoreversion overwritereadonly
Source: ..\doc\help\jvcsmak\Jedimakemain.chm; DestDir: {app}\Help; Components: GUI; Flags: ignoreversion overwritereadonly



[Icons]
Name: {group}\Jedi Make; Filename: {app}\Jvcsmak.exe
Name: {group}\{cm:UninstallProgram,Jedi Make}; Filename: {uninstallexe}
Name: {userdesktop}\Jedi Make; Filename: {app}\Jvcsmak.exe; Tasks: desktopicon
Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\Jedi Make; Filename: {app}\Jvcsmak.exe; Tasks: quicklaunchicon
Name: {group}\How to Create a JVCSMAK Plugin; Components: PLGTEMPLATE; Filename: {app}\How to Create a JVCSMAK Plugin.rtf

[Run]
Filename: {app}\Jvcsmak.exe; Description: {cm:LaunchProgram,Jedi Make}; Flags: nowait postinstall skipifsilent

[Dirs]
Name: {app}\Source
Name: {app}\Source\Plugintemplate
Name: {app}\Source\Lib
Name: {app}\Help; Permissions: everyone-full
Name: {cf}\Help; Permissions: everyone-full


[Code]
// some often used consts
const
  C_RSK_DELPHI      = 'Delphi';
  C_RSK_CPP_BUILDER = 'C++Builder';
  C_RSK_BDS         = 'BDS';

  C_RSK_1_0 = '1.0';
  C_RSK_2_0 = '2.0';
  C_RSK_3_0 = '3.0';
  C_RSK_5_0 = '5.0';
  C_RSK_6_0 = '6.0';
  C_RSK_7_0 = '7.0';

  C_RVAL_JVCSIDEClient = 'JVCSMAKEWizard';

// some global variables
var
  g_bHaveRegMoved : Boolean;


{ =============================================================================
  Purpose  : Create a chapter file
  Parameter: chm File, Chapter
}
procedure CreateMergedHelpFileChapter( aFilename:String; aChapter:String; aContentFile:String);
var s:String;
begin
  s := ChangeFileExt( aFilename, '.txt');
  SaveStringToFile( s, 'Chapter='+aChapter, false);
  if aContentFile<>'' then
    SaveStringToFile( s, #13#10 + 'ContentFile='+aContentFile, true);
end;

{ =============================================================================
  Purpose  : Copy an existing chm File into the tworks help directory and
             create a chapter file
  Parameter: chm File, Chapter
}
procedure CopyMergedHelpFile( aFilename:String; aChapter:String; aContentFile:String);
var s :String;
begin

  //Copy File
  s := ExtractFileName( aFilename);
  s := ExpandConstant('{app}\Help\') + s;

  if FileExists( s) then
    DeleteFile( s);

  FileCopy( aFilename, s, False);

  //create Chapter File
  CreateMergedHelpFileChapter( s, aChapter, aContentFile);
end;

{ =============================================================================
  Purpose  : Detect installed (Win32) Delphi version
  Parameter: sVersion[5.0, 6.0, 7.0]
}
function GetDelphiDetected(const sVersion : String) : Boolean;
Begin
  result := RegKeyExists(HKCU, 'Software\Borland\Delphi\'+sVersion);
End;

{ =============================================================================
  Purpose  : Detect any Delphi version (5,6,7)
}
function GetAnyDelphiDetected() : Boolean;
Begin
  // D5, D6 or D7 installed?
  result := GetDelphiDetected(C_RSK_5_0) or
            GetDelphiDetected(C_RSK_6_0) or
            GetDelphiDetected(C_RSK_7_0);
End;

{ =============================================================================
  Purpose  : Detect installed Borland Developer Studio version
  Parameter: sVersion[1.0, 2.0, 3.0]
}
function GetBDSDetected(const sVersion : String) : Boolean;
Begin
  result := RegKeyExists(HKCU, 'Software\Borland\BDS\'+sVersion);
End;

{ =============================================================================
  Purpose  : Detect installed Borland Developer Studio product version (.NET)
             includes also Delphi8, D2005
  Parameter: sVersion[1.0, 2.0, 3.0]
}
{ =============================================================================
  Purpose  : Detect any BDS version (C#Builder, D8, D2k5)
}
function GetAnyBDSDetected() : Boolean;
Begin
  // C#Builder, D8, D2k5 installed?
  result := GetBDSDetected(C_RSK_1_0) or
            GetBDSDetected(C_RSK_2_0) or
            GetBDSDetected(C_RSK_3_0);
End;

{ =============================================================================
  Purpose  : Detect if FreeVCS IDE DLL is installed for
             one Delphi version (5,6,7)
  Parameter: sVersion[5.0, 6.0, 7.0]
}
function GetDelphiFreeVCSDetected(const sVersion : String) : Boolean;
Begin
  result := RegKeyExists(HKCU, 'Software\Borland\Delphi\'+sVersion+'\Version Control\FreeVCS');
End;

{ =============================================================================
  Purpose  : Register appropriate IDE client, either VCSManager or Expert
  Result   : FALSE = terminate Setup
             TRUE  = continue Setup
}
procedure RegisterJvcsMakIdeClient(const sProduct, sVersion : String);
Var
  bUseVCSManager : Boolean;
  sIDEDLL : String;
  sRegKey : String;
  sValue : String;
begin
  bUseVCSManager := false;
  sIDEDll := AddBackSlash(ExpandConstant('{app}'));
  sRegKey := '';
  // -----------------
  // IF Delphi (Win32)
  if sProduct = C_RSK_DELPHI then
  begin
    if (sVersion = C_RSK_5_0) then
    begin
      sIDEDLL := sIDEDLL + 'JVCSMakPluginWizardD5.dll';
    end
    else if sVersion = C_RSK_6_0 then
    begin
      sIDEDLL := sIDEDLL + 'JVCSMakPluginWizardD6.dll';
    end
    else if sVersion = C_RSK_7_0 then
    begin
      sIDEDLL := sIDEDLL + 'JVCSMakPluginWizardD7.dll';
    end;
  end
  // -------------
  // IF Delphi (.NET)
  else if sProduct = C_RSK_BDS then
  begin
    if sVersion = C_RSK_3_0 then
    begin
      sIDEDLL := sIDEDLL + 'JVCSMakPluginWizardD9.dll';
    end;
  end;

  RegWriteStringValue (HKCU, 'Software\Borland\'+sProduct+'\'+sVersion+'\Experts', C_RVAL_JVCSIDEClient, sIDEDll);
end;


{ =============================================================================
  Purpose  : InnoSetup event handler which is called during initialization
             of the setup process
  Result   : FALSE = terminate Setup
             TRUE  = continue Setup
}
function InitializeSetup(): Boolean;
Begin
  // Initialization
  result := true;

  g_bHaveRegMoved := false;
End;


{ =============================================================================
  Purpose  : InnoSetup event handler which is called on change to another
             wizard page
}
procedure CurPageChanged(CurPage: Integer);
Var
  sSelTasks   : String;
  sSrc : String;
  sDst : String;
  bMigrateSuccess : Boolean;
Begin
  Case CurPage of
  wpSelectDir :
    Begin
    End;
  wpFinished:  // setup is finished, finalizing tasks
    Begin
      sSelTasks := WizardSelectedTasks(false);
      // ===================================
      // Register Delphi (5,6,7) IDE client
      // ===================================
      if (Pos('IDE_DELPHI_REGISTER\D7',sSelTasks)>0) then
        RegisterJvcsMakIdeClient(C_RSK_DELPHI, C_RSK_7_0);
      // ===================================
      // Register BDS (3) IDE client
      // ===================================
      if (Pos('IDE_DELPHI_REGISTER\BDS3',sSelTasks)>0)  then
        RegisterJvcsMakIdeClient(C_RSK_BDS, C_RSK_3_0);

    End;  // curPage = csTerminate
  End;  // case
End;
